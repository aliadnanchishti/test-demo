
variables:
   workspace-name: 'ws-ml' # Workspace Service Connection name
   resourcegroup-name: 'RG-ML' # AML Resource Group name
   experiment-name: 'DevOpsExperiment' # AML Experiment name
   trainingcompute-name: 'mytrcompute44' # AML Compute cluster name
   trainingscript-name: 'test2.py' # Model training script name in repo
   datastore-name: 'myundatastore' # Datastore name
   dataset-name: 'iris.csv' # Dataset name residing in storageaccount
   #model-name: 'mynewmodel' # Model name
   aks-name: 'akscluster' # AKS cluster name
   aksservice-name: 'devopsservice' # AKS service name


trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'


steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'

- script: python -m pip install --upgrade pip setuptools wheel
  displayName: 'Install tools'
- script: python -m pip install -r requirements.txt
  displayName: 'Install requirements'

# - task: AzureCLI@2
#   displayName: 'Attach folder to workspace'
#   inputs:
#     azureSubscription: $(ml-ws-connection)
#     workingDirectory: $(ml-path)
#     scriptLocation: inlineScript
#     scriptType: 'bash'
#     inlineScript: 'az ml folder attach -w $(ml-ws) -g $(ml-rg)'

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: '$(System.DefaultWorkingDirectory)/trainingexperiment.py'
    arguments: --ws=$(workspace-name) --rg=$(resourcegroup-name) --experiment=$(experiment-name) --trcompute=$(trainingcompute-name) --trainingscript=$(trainingscript-name) --datastore=$(datastore-name) --dataset=$(dataset-name)

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: '$(System.DefaultWorkingDirectory)/deployment.py'
    arguments: --ws=$(workspace-name) --rg=$(resourcegroup-name) --aksname=$(aks-name) --servicename=$(aksservice-name)


# - task: AzureCLI@2
#   displayName: 'Train model'
#   inputs:
#     azureSubscription: $(ml-ws-connection)
#     workingDirectory: $(ml-path)
#     scriptLocation: inlineScript
#     scriptType: 'bash'
#     inlineScript: 'az ml run submit-script -c config/train --ct $(ml-ct) -e $(ml-exp) -t run.json train.py'

# # Add potential approval step before registration of model

# - task: AzureCLI@2
#   displayName: 'Register model'
#   inputs:
#     azureSubscription: $(ml-ws-connection)
#     workingDirectory: $(ml-path)
#     scriptLocation: inlineScript
#     scriptType: 'bash'
#     inlineScript: 'az ml model register -n $(ml-model-name) -f run.json --asset-path outputs/ridge_0.95.pkl -t model.json'

# - task: AzureCLI@2
#   displayName: 'Deploy model to ACI for QA'
#   inputs:
#     azureSubscription: $(ml-ws-connection)
#     workingDirectory: $(ml-path)
#     scriptLocation: inlineScript
#     scriptType: 'bash'
#     inlineScript: 'az ml model deploy -n diabetes-qa-aci -f model.json --ic config/inference-config.yml --dc config/deployment-config-aci.yml --overwrite'

# # Add potential automated tests

# - task: AzureCLI@2
#   displayName: 'Create AKS cluster'
#   inputs:
#     azureSubscription: $(ml-ws-connection)
#     workingDirectory: $(ml-path)
#     scriptLocation: inlineScript
#     scriptType: 'bash'
#     inlineScript: 'az ml computetarget create aks --name $(ml-aks-name) --cluster-purpose DevTest'

# - task: AzureCLI@2
#   displayName: 'Deploy model to AKS for Production'
#   inputs:
#     azureSubscription: $(ml-ws-connection)
#     workingDirectory: $(ml-path)
#     scriptLocation: inlineScript
#     scriptType: 'bash'
#     inlineScript: 'az ml model deploy --name diabetes-prod-aks --ct $(ml-aks-name) -f model.json --ic config/inference-config.yml --dc config/deployment-config-aks.yml  --overwrite'

#- task: AzureCLI@2
#  displayName: 'Delete deployed service'
#  inputs:
#    azureSubscription: $(ml-ws-connection)
#    workingDirectory: $(ml-path)
#    scriptLocation: inlineScript
#    scriptType: 'bash'
#    inlineScript: 'az ml service delete -n diabetes-qa-aci'